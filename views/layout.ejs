<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Bootstrap 101 Template</title>

		<!-- Bootstrap -->
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
		
                <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
		<link rel="stylesheet" href="/styles/main.css">

		<!--  
		Stylesheets and Preprocessors
		==============================

		You can always bring in CSS files manually with `<link>` tags, or asynchronously
		using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
		of Sails' conventional asset pipeline (boilerplate Gruntfile).

		By default, stylesheets from your `assets/styles` folder are included
		here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
		are supported. In production, your styles will be minified and concatenated into
		a single file.
		
		To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
		For example, here are a few things you could do:
		
		+ Change the order of your CSS files
		+ Import stylesheets from other directories
		+ Use a different or additional preprocessor, like SASS, SCSS or Stylus
		-->

		<!--STYLES-->
		<link rel="stylesheet" href="/styles/importer.css">
		<link rel="stylesheet" href="/styles/main.css">
		<!--STYLES END-->
	</head>

	<body>

		<!--
		Client-side Templates
		========================

		HTML templates are important prerequisites of modern, rich client applications.
		To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
		that you load these templates client-side.

		By default, your Gruntfile is configured to automatically load and precompile
		client-side JST templates in your `assets/templates` folder, then
		include them here automatically (between TEMPLATES and TEMPLATES END).
		
		To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
		For example, here are a few things you could do:

		+ Import templates from other directories
		+ Use a different template engine (handlebars, jade, dust, etc.)
		+ Internationalize your client-side templates using a server-side
		stringfile before they're served.
		-->

		<!--TEMPLATES-->
		
		<!--TEMPLATES END-->


		<!--

		Client-side Javascript
		========================

		You can always bring in JS files manually with `script` tags, or asynchronously
		on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
		take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

		By default, files in your `assets/js` folder are included here
		automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
		CoffeeScript (.coffee) are supported. In production, your scripts will be minified
		and concatenated into a single file.
		
		To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
		For example, here are a few things you could do:
		
		+ Change the order of your scripts
		+ Import scripts from other directories
		+ Use a different preprocessor, like TypeScript

		-->

		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
		<!--SCRIPTS-->
		<script src="/js/dependencies/sails.io.js"></script>
		<script src="/js/dependencies/Chart.min.js"></script>
		<script src="/js/dependencies/lodash.min.js"></script>
		<script src="/js/chart.js"></script>
		<!--SCRIPTS END-->

                <!-- navbar -->
                <nav class="navbar navbar-inverse navbar-fixed-top">
                    <div class="container">
                        <div id="navbar" class="navbar-collapse collapse">
                            <ul class="nav navbar-nav">
                                <% var links = [
                                    {
                                        text: "Status",
                                        path: "/"
                                    },
                                    {
                                        text: "Teacher area",
                                        path: "/teacher"
                                    },
                                    {
                                        text: "Admin",
                                        path: "/admin",
                                        onlyAdmin: true
                                    }
                                ];
                                if(req.user) {
                                    links.push({
                                        text: "Logout",
                                        path: "/logout"
                                    });
                                } else {
                                    links.push({
                                        text: "Login",
                                        path: "/login"
                                    });
                                }
                                for(var link in links) {
                                    var l = links[link];
                                    if(l.onlyAdmin && (!req.user || !req.user.isAdmin))
                                      continue;
                                %>
                                    
                                <li <%- (l.path == req.path) ? 'class="active"' : ''%>>
                                    <a href="<%= l.path%>"><%= l.text%></a>
                                </li>
                                <% } %>
                        </div>
                    </div>
                </nav>

                <!-- must be after included scripts -->
		<%- body %>

                <!-- must be last thing, because it takes quite long to load (~24 secs) -->
		<script src="http://localhost:35729/livereload.js"></script>
        </body>
</html>
